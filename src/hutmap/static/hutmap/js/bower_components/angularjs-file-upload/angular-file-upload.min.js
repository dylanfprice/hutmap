/**!
 * AngularJS file upload/drop directive with http post and progress
 * @author  Danial  <danial.farid@gmail.com>
 * @version 1.0.2
 */
(function(){var a=angular.module("angularFileUpload",[]);a.html5=!!window.FormData;if(!a.html5){(function(){if(!window.FileAPI||!FileAPI.upload){var f="",b=document.createElement("script"),e=document.getElementsByTagName("script"),d,c;if(window.FileAPI&&window.FileAPI.jsPath){f=window.FileAPI.jsPath}else{for(d=0;d<e.length;d++){c=e[d].src.indexOf("angular-file-upload.js");if(c==-1){c=e[d].src.indexOf("angular-file-upload.min.js")}if(c>-1){f=e[d].src.substring(0,c);break}}}if(!window.FileAPI||FileAPI.staticPath==null){FileAPI={staticPath:f}}b.setAttribute("src",f+"FileAPI.min.js");document.getElementsByTagName("head")[0].appendChild(b)}})()}a.XMLHttpRequest=function(){if(!a.html5){window.FormData=FormData=function(){return{append:function(c,d){this[c]=d}}};var b={onreadystatechange:function(){},headers:{},responseHeaders:{},config:{complete:function(d,c){b.status=c.status;b.readyState=4;b.responseHeaders=c.getAllResponseHeaders();b.responseText=c.responseText;b.onreadystatechange()}},getAllResponseHeaders:function(){return this.responseHeaders},setRequestHeader:function(c,d){this.headers[c]=d},open:function(e,d,c){this.config.url=d},upload:{addEventListener:function(c,d){b.config.progress=d}},send:function(c){this.config.files={file:c.file};this.config.data={};for(key in c){if(key!="file"&&key!="append"){this.config.data[key]=c[key]}}this.config.headers=this.headers;FileAPI.upload(this.config)},readyState:0,status:0,responseText:null};return b}else{return new XMLHttpRequest()}};a.defineHttpUploadFile=function(b){if(!b.uploadFile){b.uploadFile=function(f){var j=new a.XMLHttpRequest(),i,h,e,d,c,g=new FormData();g.append(f.fileFormDataName||"file",f.file);for(key in f.data){g.append(key,f.data[key])}j.open(f.method||"POST",f.url,true);f.headers=f.headers||{};for(key in f.headers){j.setRequestHeader(key,f.headers[key])}j.onreadystatechange=function(){if(j.readyState==4){var l=/^\s*(\[|\{[^\{])/,k=/[\}\]]\s*$/,n=/^\)\]\}',?\n/,o=j.responseText,m=j.getAllResponseHeaders();if(typeof o=="string"){o=o.replace(n,"");if(l.test(o)&&k.test(o)){o=(typeof o==="string")?JSON.parse(o):o}}if(200<=j.status&&j.status<300){if(i){i(o,j.status,m,f)}if(h){h(o,j.status,m,f)}}else{if(e){e(o,j.status,m,f)}}}};j.upload.addEventListener("progress",function(k){if(d){d(k)}},false);c={then:function(k){i=k;return c},success:function(k){h=k;return c},error:function(k){e=k;return c},progress:function(k){d=k;return c}};j.send(g);return c}}};a.directive("ngFileSelect",["$parse","$http",function(b,c){a.defineHttpUploadFile(c);return function(f,g,d){var e=b(d.ngFileSelect);if(!a.html5){g.wrap('<div class="js-fileapi-wrapper" style="position:relative; overflow:hidden">')}g.bind("change",function(h){var l=[],j,k;if(!a.html5){l=FileAPI.getFiles(h)}else{j=h.target.files;if(j!=null){for(k=0;k<j.length;k++){l.push(j.item(k))}}}f.$apply(function(){e(f,{$files:l,$event:h})})})}}]);a.directive("ngFileDropAvailable",["$parse","$http",function(b,c){return function(f,g,d){if("draggable" in document.createElement("span")){var e=b(d.ngFileDropAvailable);if(!f.$$phase){f.$apply(function(){e(f)})}else{e(f)}}}}]);a.directive("ngFileDrop",["$parse","$http",function(b,c){a.defineHttpUploadFile(c);return function(f,g,d){if("draggable" in document.createElement("span")){var e=b(d.ngFileDrop);g[0].addEventListener("dragover",function(h){h.stopPropagation();h.preventDefault();g.addClass("dragover")},false);g[0].addEventListener("dragleave",function(h){g.removeClass("dragover")},false);g[0].addEventListener("drop",function(h){h.stopPropagation();h.preventDefault();g.removeClass("dragover");var l=[],j=h.dataTransfer.files,k;if(j!=null){for(k=0;k<j.length;k++){l.push(j.item(k))}}f.$apply(function(){e(f,{$files:l,$event:h})})},false)}else{g.css("display","none")}}}])})();